
#include "stm32f0xx.h"                      // STM32器件寄存器定义头文件

/*
	u8	Function1;
	u8	Function2;
	u16	ChineseName;
	u16	EnglishName;
	u16	MaxValue;
	u16	MinValue;
	u16	BaseValue;
	u16	Address;
	u8	StartBit;
	u8	BitLength;
	u8	Unit;
	u8	ReadLevel;
	u8	WriteLevel;
	u8	DataType;
	u8	Disable;
	u8	rsvd[11];
*/

// ---------------------------- 参数结构定义用宏定义 ------------------------------

#define PARAMETER_FUNCTION2_MAINMENU		0x00
#define	PARAMETER_FUNCTION2_LV1MENU			0x01
#define	PARAMETER_FUNCTION2_LV2MENU			0x02
#define	PARAMETER_FUNCTION2_LV3CONNECT		0x03

#define	PARAMETER_FUNCTION2_PARAMETER		0x00
#define	PARAMETER_FUNCTION2_STATE			0x04

#define PARAMETER_DATA_TYPE_U16				0x00		// Uint16
#define	PARAMETER_DATA_TYPE_ONOFF			0x11		// 0:OFF  1:ON
#define	PARAMETER_DATA_TYPE_ERR				0x12		// 0:Normal 1:Error


// 功能码1定义
// 暂无
#define PARAMETER_FORMAT_FUNCTION1		0			// 功能码1

// 功能码2定义：
#define PARAMETER_FORMAT_FUNCTION2		1			// 功能码2
#define PARAMETER_FORMAT_UNIT			4			// 单位编号
#define PARAMETER_FORMAT_DATA_TYPE		5			// 数据类型
#define PARAMETER_FORMAT_MAX_HI			6			// 最大允许值，高8位
#define PARAMETER_FORMAT_MAX_LOW		7			// 最大允许值，低8位
#define PARAMETER_FORMAT_MIN_HI			8			// 最小允许值，高8位
#define PARAMETER_FORMAT_MIN_LOW		9			// 最小允许值，低8位
#define PARAMETER_FORMAT_BASE			10			// 基值，表示小数位数。0：无小数，1：1位小数......
#define PARAMETER_FORMAT_ADDRESS_HI		11			// 存储地址，高8位
#define PARAMETER_FORMAT_ADDRESS_LOW	12			// 存储地址，低8位
#define PARAMETER_FORMAT_START_BIT		13			// 起始bit位
#define PARAMETER_FORMAT_BIT_LENGTH		14			// bit位长度
#define PARAMETER_FORMAT_RW_LEVEL		15			// 读写权限

// 显示类型， 0：正常显示参数，只显示参数名，确认键进入修改界面；1：状态量，定时刷新，同时显示名称与数值单位
#define PARAMETER_DISPLAY_TYPE			16		

// 菜单及数据显示树级别，0x00:主目录（参数设定），0x01：一级目录（外设设置），0x02：二级目录（输出驱动），0x03：参数内容（OUT1参数）
#define PARAMETER_MENU_LEVEL			17	


// Function1 = 0x5A
// Function2 0x01:主目录（系统信息，参数设置，状态，测试，运行记录。。。），0x11:一级目录；0x12：二级目录；0x21：参数
// u16数据以MODBUS结构为准，高8位在前

// 每32BYTE为一组，一个参数占用2组，即64BYTE
const u8 ParameterFormat_Table[][32] = {
// 预留
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"", 	
// 主目录，系统信息
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"系统信息        System Inf.", 
// 主目录，参数设定
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"参数设定        Parameter Set", 
// 三级内容，车速比例
{0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x10,0x00,0x00,0x03,0x20,0x10,0x00,0x00,0x00,
0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"车速比例        Speed Proportion", 
// 三级内容，控制器选择
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x20,0x11,0x00,0x00,0x00,
0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"控制器选择      Controller Sel.", 
// 主目录，当前告警
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"当前告警        Current Warning", 
// 主目录，历史告警
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"历史告警        Warning History", 
// 主目录，运行记录
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"运行记录        Record", 
// 三级内容，运行时间
{0x00,0x00,0x00,0x00,'H',0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,
0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
"运行时间        Working Hour", 
};

const u16 ParameterFormatTable_Length = sizeof(ParameterFormat_Table)/64;




